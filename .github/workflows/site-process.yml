name: Site Process

on:
  workflow_dispatch:
    inputs:
      site:
        description: Select the site to process
        required: true
        type: choice
        options:
          - immediate-trader.org
          - trackinggate.pro

jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Extract domain from metadata.json and set repo name
        id: extract_domain
        run: |
          METADATA_FILE="templates/${{ github.event.inputs.site }}/metadata.json"
          if [ -f "$METADATA_FILE" ]; then
            echo "metadata.json found at $METADATA_FILE"
            NEW_URL=$(jq -r '.newUrl // empty' $METADATA_FILE)
            if [ -z "$NEW_URL" ]; then
              echo "Error: Could not extract newUrl from metadata.json"
              exit 1
            else
              REPO_NAME="${NEW_URL}"
              echo "Repository will be named: $REPO_NAME"
              echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
            fi
          else
            echo "Error: metadata.json not found at $METADATA_FILE"
            exit 1
          fi

      - name: Check if repository exists
        run: |
          echo "Checking if repository ${{ env.REPO_NAME }} exists"
          REPO_EXISTS=$(curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -s "https://api.github.com/user/repos?per_page=100" | \
              jq -r '.[] | select(.name == "'"${{ env.REPO_NAME }}"'") | .name')
          
          if [ -z "$REPO_EXISTS" ]; then
            echo "Repository ${{ env.REPO_NAME }} does not exist. Creating a new one."
          else
            echo "Repository ${{ env.REPO_NAME }} already exists. Reusing it."
          fi

      - name: Create GitHub repository (if needed)
        if: ${{ env.REPO_NAME }} != ${{ env.REPO_EXISTS }}
        run: |
          curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
               -d '{"name": "'"${{ env.REPO_NAME }}"'"}' \
               https://api.github.com/user/repos

      - name: Create new folder and copy contents
        run: |
          mkdir ${{ env.REPO_NAME }}
          cp -r templates/${{ github.event.inputs.site }}/* ${{ env.REPO_NAME }}/
        shell: bash

      - name: Initialize and push to repository
        run: |
          cd ${{ env.REPO_NAME }}
          git init
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote add origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/richardbizzz/${{ env.REPO_NAME }}.git
          git add .
          git commit -m "Initial commit for ${{ env.REPO_NAME }}"
          git branch -M main
          git push -u origin main

      - name: Set GitHub Pages custom domain
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/richardbizzz/${{ env.REPO_NAME }}/pages \
            -d '{"cname": "'"${{ env.REPO_NAME }}"', "source": {"branch": "main", "path": "."}}'

      - name: Add CNAME file for GitHub Pages
        run: |
          echo "${{ env.REPO_NAME }}" > ${{ env.REPO_NAME }}/CNAME
          
      - name: Commit and push CNAME for GitHub Pages
        run: |
          cd ${{ env.REPO_NAME }}
          git add CNAME
          git commit -m "Add CNAME file for GitHub Pages"
          git push

      - name: Update repository description
        run: |
          DESCRIPTION="GitHub Pages Domain: ${{ env.REPO_NAME }}, New URL: ${{ env.REPO_NAME }}"
          echo "Updating repository description to: $DESCRIPTION"

          curl -X PATCH \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/richardbizzz/${{ env.REPO_NAME }} \
            -d '{"description": "'"$DESCRIPTION"'"}'

  deploy-pages:
    runs-on: ubuntu-latest
    needs: create-repo
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and deploy to GitHub Pages
        run: |
          git add -A
          git commit -m "Deploy to GitHub Pages"
          git push origin main
